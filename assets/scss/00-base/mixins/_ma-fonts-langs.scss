@use "paths" as *;
@use "variables" as *;

$oneSpace: 	' ';
$oneDash:		'-';

@mixin font-face ($family: "Noto", $type: "Sans", $script: "Cyrillic", $suffix: "UI", $weight: "VF", $subset: "-subset", $fontWeight: "100 900", $fontStyle: "normal", $fontDisplay: "swap", $unicodeRange: "cyrillic", $space: $oneSpace, $dash: $oneDash) {
	@if $weight == "VF" {
		font-family: '#{$family} #{$type} #{$script}#{$space}#{$suffix} VF';
	} @else {
		font-family: '#{$family} #{$type} #{$script}#{$space}#{$suffix}';
	}
	src:	url('#{$assets-path}#{$fonts-path}#{$script}/#{$family}#{$type}#{$script}#{$dash}#{$suffix}#{$oneDash}#{$weight}#{$subset}.woff2') format('woff2'),
				url('#{$assets-path}#{$fonts-path}#{$script}/#{$family}#{$type}#{$script}#{$dash}#{$suffix}#{$oneDash}#{$weight}#{$subset}.woff') format('woff'),
				// url('#{$assets-path}#{$fonts-path}#{$script}/#{$family}#{$type}#{$script}#{$dash}#{$suffix}#{$weight}#{$subset}.eot?#iefix') format('embedded-opentype'),
				// url('#{$assets-path}#{$fonts-path}#{$script}/#{$family}#{$type}#{$script}#{$dash}#{$suffix}#{$weight}#{$subset}.svg') format('svg'),
				;
	font-weight: $fontWeight;
	font-style: $fontStyle;
	font-display: $fontDisplay;
	unicode-range: $unicodeRange;
}

// To use font-face:
// @use "mixins/ma-font-face";
// // Lao
// @font-face { @include ma-font-face.font-face(Noto, Sans, Lao, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $lao, null, null); }
//
// // Malayalam
// @font-face { @include ma-font-face.font-face(Noto, Sans, Malayalam, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $malayalam, null, null); }
////
// // Tai Le
// @font-face { @include ma-font-face.font-face(Noto, Sans, Tai, Le, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $tai-le, $oneSpace, null); }
//
// // Tai Tham
// @font-face { @include ma-font-face.font-face(Noto, Sans, Tai, Tham, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $tai-tham, $oneSpace, null); }
//
// // Tai Viet
// @font-face { @include ma-font-face.font-face(Noto, Sans, Tai, Viet, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $tai-viet, $oneSpace, null); }
//
// // Thaana
// @font-face { @include ma-font-face.font-face(Noto, Sans, Thaana, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $thaana, null, null); }
//
// // Thai
// @font-face { @include ma-font-face.font-face(Noto, Sans, Thai, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $thai, null, null); }
//
// // Takri
// @font-face { @include ma-font-face.font-face(Noto, Sans, Takri, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $takri, null, null); }
//
// // Telugu
// @font-face { @include ma-font-face.font-face(Noto, Sans, Telugu, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $telugu, null, null); }
//
// // Tamil
// @font-face { @include ma-font-face.font-face(Noto, Sans, Tamil, null, VF, -subset, 100 900, normal, ma-font-face.$global-font-display, $tamil, null, null); }
//



// Language sets and @mixin

// This adds all of the language sets for a script to an `&:lang()` rule
// it is used in script selector files so they can easily be applied to each font style
@mixin langlist($stack, $dir, $langs) {
  @each $lang in $langs {
    &:lang(#{$lang}) {
			font-family: '#{$stack} VF', $stack, $fonts !important;
      @if $fonts-enable-rtl { direction: $dir;}

		}
  }
}

// Script selector template -- replace 'thelang' with language name and 'code' with scrpt code
// @import "language-sets";
//
// $sans-stack: 		$base-sans,$thelang-sans,sans-serif;
// $serif-stack: 	$base-sans,$thelang-serif,serif;
// $ui-stack: 			$base-sans,$thelang-sans-ui,sans-serif;
//
// *,
// .#{$prefix}sans {
// 	@include langlist($sans-stack, ltr, $langs-code...);
// }
//
// .#{$prefix}serif {
// 	@include langlist($serif-stack, ltr, $langs-code...);
// }
//
// .#{$prefix}sans-ui {
// 	@include langlist($ui-stack, ltr, $langs-code...);
// }
