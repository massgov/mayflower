
version: 2

references:
  configure_npm: &configure_npm
    run: { name: 'Configure NPM', command: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'}
  configure_git: &configure_git
    run: {name: 'Prepare Git', command: 'git config --global user.email "ci.bot@mass.gov" && git config --global user.name "MassGov Bot"'}
  no_host_check: &no_host_check
    run: {name: 'Disable StrictHostKeyChecking', command: 'mkdir -p $HOME/.ssh && echo "StrictHostKeyChecking no" >> ~/.ssh/config'}
  install_aws: &install_aws
    run: {name: 'Install AWS CLI', command: 'sudo apt-get -y -qq install awscli'}

react_defaults: &react_defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.9.4

patternlab_defaults: &patternlab_defaults
  working_directory: /var/www/code
  docker:
    - image: massgov/drupal-container:1.0.8-ci

backstop_defaults: &backstop_defaults
  working_directory: /home/circleci
  docker:
    - image: circleci/python:2.7.14

jobs:
  patternlab_build:
    <<: *patternlab_defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM Cache
          keys:
            - pl-npm-v3-{{ checksum "patternlab/styleguide/package-lock.json" }}
            - pl-npm-v3-
      - run: { name: 'NPM Install', command: 'cd patternlab/styleguide && npm install' }
      - save_cache:
          name: Save NPM cache
          key: pl-npm-v3-{{ checksum "patternlab/styleguide/package-lock.json" }}
          paths: [ patternlab/styleguide/node_modules ]
      - run: { name: 'Build', command: 'cd patternlab/styleguide && node_modules/.bin/gulp patternlab:build'}
      - persist_to_workspace:
          root: /var/www/code
          paths: ["*"]

  patternlab_test:
    <<: *backstop_defaults
    steps:
      - attach_workspace: {at: /home/circleci}
      - setup_remote_docker
      - run: |
          cd patternlab
          docker-compose up --no-start web backstop
          docker cp ./ $(docker-compose ps -q backstop):/src/
          docker cp ./styleguide/public/. $(docker-compose ps -q web):/usr/share/nginx/html
      - run: |
          cd patternlab
          docker-compose run backstop test
      - run:
          command: cd patternlab && docker cp $(docker-compose ps -q backstop):/src/backstopjs/. ./backstopjs/
          when: always
      - store_artifacts:
          path: patternlab/backstopjs
          destination: backstop
      - store_test_results:
          path: patternlab/backstopjs/reports/ci

  patternlab_deploy_branch:
    <<: *patternlab_defaults
    steps:
      - attach_workspace: {at: /var/www/code}
      - *no_host_check
      - add_ssh_keys
      - *configure_git
      - run:
          name: 'Deploy Artifact Branch'
          command: |
            # This snippet pushes the dist directory to the artifact repo by faking a checkout
            # of the artifact repository, creating or reusing an existing branch, committing the
            # work, then pushing to github.
            # See https://github.com/LastCallMedia/Artifact.sh/blob/master/artifact.sh
            cd patternlab/styleguide/dist
            git clone --bare git@github.com:massgov/mayflower-artifacts.git .git
            git config core.bare false
            git rev-parse --verify -q "$CIRCLE_BRANCH" || git branch "$CIRCLE_BRANCH" $(git show-ref -s master)
            git symbolic-ref HEAD "refs/heads/$CIRCLE_BRANCH"
            git add .
            if git diff-index --quiet HEAD; then
              echo "Nothing to commit"
            else
              git commit -m "Automated commit based on $CIRCLE_SHA1"
              git push origin "$CIRCLE_BRANCH"
            fi
      - run:
          name: 'Deploy S3 Branch'
          command: aws s3 sync patternlab/styleguide/public "s3://mayflower.digital.mass.gov/b/$CIRCLE_BRANCH"

  patternlab_deploy_tag:
    <<: *patternlab_defaults
    steps:
      - attach_workspace: {at: /var/www/code}
      - *no_host_check
      - add_ssh_keys
      - *configure_git
      - *configure_npm
      - run:
          name: 'Deploy Artifact Tag'
          command: |
            # This snippet pushes the dist directory to the artifact repo by faking a checkout
            # of the artifact repository, creating a new commit and tag, then pushing.
            # See https://github.com/LastCallMedia/Artifact.sh/blob/master/artifact.sh
            cd patternlab/styleguide/dist
            git clone --bare git@github.com:massgov/mayflower-artifacts.git .git
            git config core.bare false
            git symbolic-ref HEAD "refs/heads/master"
            git add .
            if git diff-index --quiet HEAD; then
              echo "Nothing to commit"
            else
              git commit -m "Automated commit based on $CIRCLE_SHA1"
            fi
            git rev-parse --verify -q "$CIRCLE_TAG" || git tag "$CIRCLE_TAG"
            git push origin "$CIRCLE_TAG"
      - run:
          name: 'Deploy NPM Tag'
          command: |
            cd patternlab/styleguide/dist
            npm version --no-git-tag-version "$CIRCLE_TAG"
            if test -z "$(npm show @massds/mayflower@$CIRCLE_TAG)"; then
              npm publish
            else
              echo "Skipping NPM publish - $CIRCLE_TAG already exists"
            fi
      - run:
          name: 'Deploy S3 Tag'
          command: |
            aws s3 sync patternlab/styleguide/public "s3://mayflower.digital.mass.gov/v/$CIRCLE_TAG"
            if [[ "$CIRCLE_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              # Use cp instead of sync for root copy.  sync lists all keys and is too slow.
              aws s3 cp --recursive patternlab/styleguide/public/ "s3://mayflower.digital.mass.gov/"
            fi

  react_build_storybook:
    <<: *react_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - mfr-dependencies-{{ checksum "react/package.json" }}
      - run: cd react && npm install
      - save_cache:
          paths:
            - react/node_modules
          key: mfr-dependencies-{{ checksum "react/package.json" }}
      - run:
          name: Mayflower React Build
          command: cd react && npm run build
      - run:
          name: Mayflower React Build Storybook
          command: cd react && npm run build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths: ["*"]

  react_test:
    <<: *backstop_defaults
    steps:
      - attach_workspace: {at: /home/circleci}
      - setup_remote_docker
      - run: |
          cd react
          docker-compose up --no-start web backstop
          docker cp ./ $(docker-compose ps -q backstop):/src/
          docker cp ../assets $(docker-compose ps -q backstop):/src/assets
          docker cp ./storybook-static/. $(docker-compose ps -q web):/usr/share/nginx/html
      - run: |
          cd react
          docker-compose run backstop test --atoms && docker-compose run backstop test
      - run:
          command: cd react && docker cp $(docker-compose ps -q backstop):/src/backstop/. ./backstop/
          when: always
      - store_artifacts:
          path: react/backstop
          destination: backstop
      - store_test_results:
          path: react/backstop/data/ci_report

  react_deploy_tag:
    <<: *react_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *configure_npm
      - run:
          name: 'Publish NPM package'
          command: |
            cd react
            npm version --no-git-tag-version "$CIRCLE_TAG"
            if test -z "$(npm show @massds/mayflower-react@$CIRCLE_TAG)"; then
              npm publish
            else
              echo "Skipping NPM publish - $CIRCLE_TAG already exists"
            fi
      - run: |
          # Only sync to S3 for stable tags.
          if [[ "$CIRCLE_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            sudo apt-get install python-dev python-pip
            sudo pip install awscli
          fi
      - run: |
          # Only sync to S3 for stable tags.
          if [[ "$CIRCLE_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            cd react
            aws s3 sync storybook-static s3://mayflower-react.digital.mass.gov/ --delete
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id $AWS_DISTRIBUTION_ID_REACT --paths '/*'
          fi

workflows:
  version: 2

  # Executed on branch pushes.
  build_branch:
    jobs:
      - patternlab_build:
          filters:
            branches: { ignore: /docs\-.*/ }
      - patternlab_deploy_branch:
          requires: [patternlab_build]
          filters:
            branches: { ignore: /(docs\-|react\/).*/ }
      - patternlab_test: {requires: [patternlab_build]}
      - react_build_storybook:
          filters:
            branches: { ignore: /docs\-.*/ }
      - react_test: {requires: [react_build_storybook]}

  # Executed on tag pushes.
  build_tag:
    jobs:
      - patternlab_build:
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }
      - patternlab_deploy_tag:
          requires: [patternlab_build]
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }
      - react_build_storybook:
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }
      - react_deploy_tag:
          requires: [react_build_storybook]
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }
