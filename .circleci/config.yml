
version: 2

references:
  configure_npm: &configure_npm
    run: { name: 'Configure NPM', command: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'}
  configure_git: &configure_git
    run: {name: 'Prepare Git', command: 'git config --global user.email "ci.bot@mass.gov" && git config --global user.name "MassGov Bot"'}

jobs:
  patternlab_build:
    working_directory: /var/www/code
    docker:
      - image: massgov/drupal-container:1.0.6-ci
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM Cache
          keys:
            - pl-npm-v1-{{ checksum "patternlab/styleguide/yarn.lock" }}
            - pl-npm-v1-
      - run: { name: 'NPM Install', command: 'cd patternlab/styleguide && yarn' }
      - save_cache:
          name: Save NPM cache
          key: pl-npm-v1-{{ checksum "patternlab/styleguide/yarn.lock" }}
          paths: [ patternlab/styleguide/node_modules ]
      - run: { name: 'Generate style guide', command: 'php patternlab/styleguide/core/console --generate' }
      - run: { name: 'Build assets', command: 'cd patternlab/styleguide && node_modules/.bin/gulp prod' }
      - persist_to_workspace:
          root: /var/www/code
          paths: ["*"]

  patternlab_test:
    working_directory: /home/circleci
    docker:
      - image: circleci/python:2.7.14
    steps:
      - attach_workspace: {at: /home/circleci}
      - setup_remote_docker
      - run: |
          cd patternlab
          docker-compose up --no-start web backstop
          docker cp ./ $(docker-compose ps -q backstop):/src/
          docker cp ./styleguide/public/. $(docker-compose ps -q web):/usr/share/nginx/html
      - run: |
          cd patternlab
          docker-compose run backstop test
      - run:
          command: cd patternlab && docker cp $(docker-compose ps -q backstop):/src/backstopjs/. ./backstopjs/
          when: always
      - store_artifacts:
          path: ./backstopjs
          destination: backstop
      - store_test_results:
          path: backstopjs/reports/ci

  patternlab_deploy_branch:
    working_directory: /var/www/code
    docker:
      - image: massgov/drupal-container:1.0.6-ci
    steps:
      - attach_workspace: {at: /var/www/code}
      - add_ssh_keys
      - *configure_git
      - run: { name: 'Deploy artifacts', command: "cd patternlab/styleguide && node_modules/.bin/gulp artifacts:publish" }
      - run: { name: 'Deploy S3', command: "cd patternlab/styleguide && node_modules/.bin/gulp patternlab:publish" }

  patternlab_deploy_tag:
    working_directory: /var/www/code
    docker:
      - image: massgov/drupal-container:1.0.6-ci
    steps:
      - attach_workspace: {at: /var/www/code}
      - add_ssh_keys
      - *configure_git
      - *configure_npm
      - run: { name: 'Release Artifacts', command: "cd patternlab/styleguide && node_modules/.bin/gulp artifacts:release" }
      - run: { name: 'Release S3', command: "cd patternlab/styleguide && node_modules/.bin/gulp patternlab:release" }
      - run: { name: 'Release NPM', command: "cd patternlab/styleguide && node_modules/.bin/gulp npm:release" }

workflows:
  version: 2

  # Executed on branch pushes.
  build_branch:
    jobs:
      - patternlab_build:
          filters:
            branches: { ignore: /(docs\-|react\/).*/ }
      - patternlab_deploy_branch: {requires: [patternlab_build]}
      - patternlab_test: {requires: [patternlab_build]}


  # Executed on tag pushes.
  build_tag:
    jobs:
      - patternlab_build:
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }
      - patternlab_deploy_tag:
          requires: [patternlab_build]
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /.*/ }


